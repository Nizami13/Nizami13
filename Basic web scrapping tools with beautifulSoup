# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vD5-2oPdBGF5uWRZ5IPRK3vZsenceK5V
"""

pip install bs4

pip install requests

from bs4 import BeautifulSoup
import requests

website='http://automationpractice.com/index.php?id_category=3&controller=category'

response=requests.get(website)

response.status_code

soup = BeautifulSoup(response.content, 'html.parser')

print(soup)

#example 1, find by id
contact_us = soup.find(id='contact-link').get_text().replace('\n','')

contact_us

#example 3 find by class
result = soup.find(class_ = 'ajax_block_product').find(class_='content_price')

result

#find_all() and findAll() helps to get the list
result_ = soup.find_all(class_ = 'ajax_block_product')
result_

len(result_)

#select and select_one () functions
#select by css selectors - returns first element - equivalent to \"find()\
#select by css selectors - returns a list - equivalent to \"find_all()/findAll()\
#you put dot bcs you want to target class
soup.select_one('.shop-phone').get_text().strip().replace('Call us now: ','')

# below the sign # is a symbol for id, bcs it says id=contact-link+
soup.select_one('#contact-link').get_text().strip()

result_ = soup.select('.ajax_block_product')
result_

len(result_)

#taking values from atributes
#take name of products
#get and get_text()
#find atribute
soup.find(itemprop='name').find('a').get('title')

soup.find(itemprop='name').find('a').get_text().strip()

#siblings and parents 
#example 1, go to product#1 and find siblings. We started from first product and was able to navigate to second product using find sibling
soup.select_one('.ajax_block_product').find_next_sibling().select_one('.product-name').get_text().strip()

#example we start from product 7 and go to prevous product/sibling
#product six is actually it is item 7, bcs counting starts from zer0
soup.select('.ajax_block_product')[6].find_previous_sibling().select_one('.product-name').get_text().strip()

#we want to go to last product and find parent element (ul_class).
soup.select('.ajax_block_product')[6].find_parent()

#extract single and multiple link
soup.find(id='contact-link').find('a')['href']



#geting the link of all seven products
link_variable=soup.find_all(itemprop='name')
link_variable

links=[]
for a in link_variable:
  links.append(a.find('a')['href'])

links

#Find Elements-Alternative syntax
#geting contuct us element
soup.find(id='contact-link').get_text().strip()

soup.find('div',{'id':'contact-link'}).get_text().strip()

#tops element to print out
subcategory=soup.find(class_='subcategory-name').get_text()
subcategory

subcategory_x = soup.find('a',{'class':'subcategory-name'}).get_text()
subcategory_x
